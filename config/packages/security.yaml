security:
    encoders:
        App\Entity\Customer: bcrypt
        App\Entity\Employee: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }

        customer_provider:
            entity:
                class: App\Entity\Customer
                property: email

        employee_provider:
            entity:
                class: App\Entity\Employee
                property: email
    firewalls:
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: customer_provider #Specify a provider when we have multiple provider because JWT can't resolve it automatically
            json_login:
                check_path: api_login_check
                username_path: email
                password_path: password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        api:
            pattern:   ^/api
            stateless: true
            guard:
                provider: customer_provider #Specify a provider when we have multiple provider because JWT can't resolve it automatically
                authenticators:
                - lexik_jwt_authentication.jwt_token_authenticator
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            anonymous: true
            pattern: ^/_secure
            form_login:
                login_path: admin_login # Permet à symfony de connaitre notre route de connexion
                check_path: admin_login # Route généré par symfony pour vérifier nos informations de connexion à partir de notre route connexion
                username_parameter: customer_login[email]
                password_parameter: customer_login[password]
                default_target_path: /_secure/ # page de redirection après connexion

            provider: employee_provider
            logout:
                path: /_secure/logout
                target: /_secure/ # page de redirection après déconnexion

        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                login_path: profile_login # Permet à symfony de connaitre notre route de connexion
                check_path: profile_login # Route généré par symfony pour vérifier nos informations de connexion à partir de notre route connexion
                username_parameter: customer_login[email]
                password_parameter: customer_login[password]
                default_target_path: /

            provider: customer_provider
            logout:
                path: /profile/logout
                target: /



    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/_secure/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_secure, roles: ROLE_EMPLOYEE }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_EMPLOYEE: ROLE_USER
        ROLE_ADMIN: [ROLE_EMPLOYEE, ROLE_ALLOWED_TO_SWITCH]